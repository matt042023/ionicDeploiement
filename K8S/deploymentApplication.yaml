apiVersion: v1
kind: Service
metadata:
  name: db-service
spec: 
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-statefulset
spec:
  serviceName: "db-service"
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: root
          volumeMounts:
            - name: mongodb_data
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb_data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: db
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: db
  template:
    metadata:
      labels: 
        app: db
    spec:
      containers:
      - name: db
        image: mongo:latest
        env: 
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root 
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: root 
        ports: 
        - containerPort: 27017
        livenessProbe: 
          exec: 
            command:
            - mongo 
            - --eval
            - db.adminCommand('ping')
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec: 
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: api
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: api
  template:
    metadata:
      labels: 
        app: api
    spec:
      containers:
      - name: api
        image: mattlheureux/applicationtest
        env: 
        - name: MONGO_URL
          value: mongodb://root:rootdb:27027/test?authSource=admin 
        - name: PORT
          value: 3000
        ports: 
        - containerPort: 3000
      depends_on: 
        -db
---
apiVersion: v1
kind: Service
metadata:
  name: front
spec: 
  selector:
    app: front
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: front
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: front
  template:
    metadata:
      labels: 
        app: front
    spec:
      containers:
      - name: front
        image: mattlheureux/applicationtest 
        ports: 
        - containerPort: 80
---
apiVersion: v1
kind: Endpoints
metadata:
  name: front
subsets:
  - addresses:
      - ip: 192.0.2.42
    ports:
      - port: 9376

# ----
# apiVersion: v1
# kind: Service
# metadata:
#   name: db
# spec:
#   selector:
#     app: db
#   ports:
#     - protocol: TCP
#       port: 27017
#       targetPort: 27017
# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mongodb-statefulset
# spec:
#   serviceName: "db-service"
#   replicas: 1
#   selector:
#     matchLabels:
#       app: db
#   template:
#     metadata:
#       labels:
#         app: db
#     spec:
#       containers:
#       - name: mongodb
#         image: mongo:latest
#         ports:
#         - containerPort: 27017
#         env:
#         - name: MONGO_INITDB_ROOT_USERNAME
#           value: root
#         - name: MONGO_INITDB_ROOT_PASSWORD
#           value: root
#         volumeMounts:
#         - name: mongodb_data
#           mountPath: /data/db
#   volumeClaimTemplates:
#   - metadata:
#       name: mongodb_data
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       resources:
#         requests:
#           storage: 1Gi
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: api
# spec:
#   selector:
#     app: api
#   ports:
#     - protocol: TCP
#       port: 3000
#       targetPort: 3000
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: api
#   template:
#     metadata:
#       labels: 
#         app: api
#     spec:
#       containers:
#       - name: api
#         image: mattlheureux/applicationtest
#         env:
#         - name: MONGO_URL
#           value: "mongodb://root:root@db:27017/test?authSource=admin"
#         - name: PORT
#           value: "3000"
#         ports:
#         - containerPort: 3000

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: front
# spec:
#   selector:
#     app: front
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: front
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: front
#   template:
#     metadata:
#       labels: 
#         app: front
#     spec:
#       containers:
#       - name: front
#         image: mattlheureux/frontapitestmobile
#         ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: db-service
# spec:
#   selector:
#     app: db
#   ports:
#   - protocol: TCP
#     port: 27017
#     targetPort: 27017